swagger: "2.0"
info: {}
basePath: /api
paths:
  /v1/:
    get:
      tags:
      - v1
      description: |-
        get QualityWorkController
        <br>
      operationId: QualityWorkController.GetAll
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.QualityWorkController'
        "403":
          description: ""
  /v1/{id}:
    get:
      tags:
      - v1
      description: |-
        get QualityWorkController by id
        <br>
      operationId: QualityWorkController.GetOne
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.QualityWorkController'
        "403":
          description: :id is empty
    put:
      tags:
      - v1
      description: |-
        update the QualityWorkController
        <br>
      operationId: QualityWorkController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for QualityWorkController content
        required: true
        schema:
          $ref: '#/definitions/models.QualityWorkController'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.QualityWorkController'
        "403":
          description: :id is not int
    delete:
      tags:
      - v1
      description: |-
        delete the QualityWorkController
        <br>
      operationId: QualityWorkController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /v1/login:
    post:
      tags:
      - v1
      description: |-
        登录后获取token
        <br>
      operationId: UserRelatedController.用户登录
      parameters:
      - in: body
        name: body
        description: body for Haouxuan content
        required: true
        schema:
          $ref: '#/definitions/models.LoginModel'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.UserRelated'
        "403":
          description: body is empty
  /v1/mock/{id}:
    get:
      tags:
      - v1/mock
      description: |-
        获取mock 接口详情
        <br>
      operationId: MockController.获取mock 接口详情
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MockController'
        "403":
          description: :id is empty
    put:
      tags:
      - v1/mock
      description: |-
        修改mock api接口信息
        <br>
      operationId: MockController.修改api接口信息
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for MockController content
        required: true
        schema:
          $ref: '#/definitions/models.MockBaseData'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MockController'
        "403":
          description: :id is not int
    delete:
      tags:
      - v1/mock
      description: |-
        delete the MockController
        <br>
      operationId: MockController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /v1/mock/add:
    post:
      tags:
      - v1/mock
      description: |-
        create MockController
        <br>
      operationId: MockController.Create
      parameters:
      - in: body
        name: body
        description: body for MockController content
        required: true
        schema:
          $ref: '#/definitions/models.MockBaseData'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/{}'
        "403":
          description: body is empty
  /v1/mock/getList:
    get:
      tags:
      - v1/mock
      description: |-
        get MockController
        <br>
      operationId: MockController.获取全部的mock api 接口
      parameters:
      - in: query
        name: page
        description: 第几页 例如：1
        type: string
      - in: query
        name: size
        description: 每页条数 例如：10
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MockController'
        "403":
          description: ""
  /v1/picture/{img}:
    get:
      tags:
      - v1
      description: |-
        图片自定义尺寸
        <br>
      operationId: CommonController.ImageResize
      parameters:
      - in: query
        name: width
        description: 宽度
        type: integer
        format: int64
      - in: query
        name: height
        description: 高度
        type: integer
        format: int64
      - in: path
        name: img
        description: 6Co6W3DogOqW6TxwDp8Vb.png
        required: true
        type: string
      responses:
        "200":
          description: 获取图片成功
  /v1/quality-work:
    post:
      tags:
      - v1
      description: |-
        create QualityWorkController
        <br>
      operationId: QualityWorkController.Create
      parameters:
      - in: body
        name: body
        description: body for QualityWorkController content
        required: true
        schema:
          $ref: '#/definitions/models.QualityWorkData'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.QualityWorkController'
        "403":
          description: body is empty
  /v1/record-account:
    post:
      tags:
      - v1
      description: |-
        create UserRelated
        <br>
      operationId: UserRelatedController.发送邮箱验证码
      parameters:
      - in: body
        name: body
        description: body for UserRelated content
        required: true
        schema:
          $ref: '#/definitions/models.SendCode'
      responses:
        "201":
          description: 200}
          schema:
            $ref: '#/definitions/{code:'
        "403":
          description: body is empty
  /v1/register:
    post:
      tags:
      - v1
      description: |-
        登录后获取token
        <br>
      operationId: UserRelatedController.用户注册
      parameters:
      - in: body
        name: body
        description: body for UserFiled content
        required: true
        schema:
          $ref: '#/definitions/models.RegisterUser'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.UserRelated'
        "403":
          description: body is empty
  /v1/reset-password:
    post:
      tags:
      - v1
      description: |-
        create UserRelated
        <br>
      operationId: UserRelatedController.重置密码，需要邮箱和token验证
      parameters:
      - in: body
        name: body
        description: body for ResetPasswordType content
        required: true
        schema:
          $ref: '#/definitions/models.ResetPasswordType'
      responses:
        "201":
          description: 200}
          schema:
            $ref: '#/definitions/{code:'
        "403":
          description: body is empty
  /v1/send-code:
    post:
      tags:
      - v1
      description: |-
        create UserRelated
        <br>
      operationId: UserRelatedController.发送邮箱验证码
      parameters:
      - in: body
        name: body
        description: body for UserRelated content
        required: true
        schema:
          $ref: '#/definitions/models.SendCode'
      responses:
        "201":
          description: 200}
          schema:
            $ref: '#/definitions/{code:'
        "403":
          description: body is empty
  /v1/upload:
    post:
      tags:
      - v1
      summary: Upload a file
      description: |-
        Uploads a file using form-data
        <br>
      operationId: CommonController.上传文件
      parameters:
      - in: formData
        name: file
        description: File to be uploaded
        required: true
        type: file
      responses:
        "200":
          description: '{string} string "File uploaded successfully"'
        "400":
          description: '{string} string "Bad request"'
  /v1/user/:
    get:
      tags:
      - v1/user
      description: |-
        get UserController
        <br>
      operationId: UserController.GetAll
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.UserController'
        "403":
          description: ""
    post:
      tags:
      - v1/user
      description: |-
        create UserController
        <br>
      operationId: UserController.Create
      parameters:
      - in: body
        name: body
        description: body for UserController content
        required: true
        schema:
          $ref: '#/definitions/models.UserController'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.UserController'
        "403":
          description: body is empty
  /v1/user/{id}:
    get:
      tags:
      - v1/user
      description: |-
        get UserController by id
        <br>
      operationId: UserController.GetOne
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.UserController'
        "403":
          description: :id is empty
    put:
      tags:
      - v1/user
      description: |-
        update the UserController
        <br>
      operationId: UserController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for UserController content
        required: true
        schema:
          $ref: '#/definitions/models.UserController'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.UserController'
        "403":
          description: :id is not int
    delete:
      tags:
      - v1/user
      description: |-
        delete the UserController
        <br>
      operationId: UserController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
definitions:
  '{}':
    title: '{}'
    type: object
  '{code:':
    title: '{code:'
    type: object
  models.ErrorController:
    title: ErrorController
    type: object
  models.LoginModel:
    title: LoginModel
    type: object
    properties:
      account:
        type: string
      password:
        type: string
  models.MockBaseData:
    title: MockBaseData
    type: object
    properties:
      data:
        type: string
      method:
        type: string
      path:
        type: string
      statusCode:
        type: integer
        format: int64
      userId:
        type: integer
        format: int64
  models.MockController:
    title: MockController
    type: object
  models.QualityWorkController:
    title: QualityWorkController
    type: object
  models.QualityWorkData:
    title: QualityWorkData
    type: object
    properties:
      average_daily_salary:
        type: number
        format: float
      colleague_environment:
        type: number
        format: float
      commuting_hours:
        type: number
        format: float
      education_coefficient:
        type: number
        format: float
      idle_duration:
        type: number
        format: float
      opposite_sex:
        type: number
        format: float
      professional_qualifications:
        type: number
        format: float
      work_environment_coefficient:
        type: number
        format: float
      work_time:
        type: number
        format: float
      working_hours:
        type: number
        format: float
  models.RegisterUser:
    title: RegisterUser
    type: object
    properties:
      code:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
  models.ResetPasswordType:
    title: ResetPasswordType
    type: object
    properties:
      confirmPassword:
        type: string
      password:
        type: string
      recordToken:
        type: string
  models.SendCode:
    title: SendCode
    type: object
    properties:
      email:
        type: string
  models.UserController:
    title: UserController
    type: object
  models.UserRelated:
    title: UserRelated
    type: object
    properties:
      id:
        type: integer
        format: int64
tags:
- name: v1
  description: |
    UserRelatedController operations for UserRelated
- name: v1
  description: |
    CommonController operations for Common
- name: v1
  description: |
    QualityWorkController operations for QualityWorkController
- name: v1/user
  description: |
    UserController operations for UserController
- name: v1/mock
  description: |
    MockController operations for MockController
